import org.gradle.api.GradleException

plugins {
    id "com.android.application"
    id "kotlin-android"  // Changed from org.jetbrains.kotlin.android
    id 'com.google.gms.google-services' // Google Services plugin for Firebase
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.smart_parking"
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xskip-metadata-version-check"]
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            // Exclude Java version if it exists
            java {
                exclude '**/MainActivity.java'
            }
        }
    }

    defaultConfig {
        applicationId "com.example.smart_parking"
        minSdkVersion 23        // Updated from 21 to 23 for firebase_auth compatibility
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        manifestPlaceholders["MAPS_API_KEY"] = project.hasProperty('MAPS_API_KEY') ? MAPS_API_KEY : ""
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:multidex:2.0.1' // Updated to 2.0.1
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Add other dependencies as needed
}